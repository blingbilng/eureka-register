<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="false" scanPeriod="60 seconds" debug="false">

	<property name="log.level" value="INFO" />
	<property name="log.appname" value="config" />
	<!-- 日志目录当前为相对路径 可调整为绝对路径 保持服务器路径一致 -->
	<property name="log.dir" value="logs/${log.appname}" />
	<!-- 归档日志保留天数 -->
	<property name="log.max.history" value="15" />
	<!-- 异步队列深度 默认256 -->
	<property name="log.async.queue.size" value="512" />

	<!-- 控制台打印 -->
	<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{50} -%msg%n</pattern>
			<charset class="java.nio.charset.Charset">UTF-8</charset>
		</encoder>
	</appender>

	<!-- 记录项目所有日志 -->
	<appender name="LOGALL" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>${log.level}</level>
		</filter>
		<file>${log.dir}/all.log</file>
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{50} -%msg%n</pattern>
			<charset class="java.nio.charset.Charset">UTF-8</charset>
		</encoder>
		<rollingPolicy
			class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${log.dir}/bak/all.%d{yyyy-MM-dd}.log</FileNamePattern>
			<MaxHistory>${log.max.history}</MaxHistory>
		</rollingPolicy>
	</appender>

	<!-- 记录项目ERROR级别文件 -->
	<appender name="LOGERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>ERROR</level>
		</filter>
		<file>${log.dir}/error.log</file>
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{50} -%msg%n</pattern>
			<charset class="java.nio.charset.Charset">UTF-8</charset>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${log.dir}/bak/error.%d{yyyy-MM-dd}.log</FileNamePattern>
			<MaxHistory>${log.max.history}</MaxHistory>
		</rollingPolicy>
	</appender>
	
	<!--配置异步日志-->
    <appender name="CONSOLE_ASYNC" class="ch.qos.logback.classic.AsyncAppender">
    	<discardingThreshold>0</discardingThreshold>
  		<queueSize>${log.async.queue.size}</queueSize>
        <appender-ref ref="CONSOLE"/>
    </appender>
    <appender name="LOGALL_ASYNC" class="ch.qos.logback.classic.AsyncAppender">
    	<discardingThreshold>0</discardingThreshold>
  		<queueSize>${log.async.queue.size}</queueSize>
        <appender-ref ref="LOGALL"/>
    </appender>
    <appender name="LOGERROR_ASYNC" class="ch.qos.logback.classic.AsyncAppender">
    	<discardingThreshold>0</discardingThreshold>
  		<queueSize>${log.async.queue.size}</queueSize>
        <appender-ref ref="LOGERROR"/>
    </appender>

	<root level="${log.level}">
		<appender-ref ref="CONSOLE_ASYNC" />
		<appender-ref ref="LOGALL_ASYNC" />
		<appender-ref ref="LOGERROR_ASYNC" />
	</root>

</configuration>
